; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = wemos_d1_mini32

[common_env_data]
lib_deps_external = 
	adafruit/Adafruit NeoPixel @ ^1.11.0
	h2zero/NimBLE-Arduino@1.4.1
	fabianoriccardi/Melody Player @ ^2.4.0
	bblanchon/ArduinoJson @ ^6.21.3
	paulo-raca/Buffered Streams @ ^1.0.8
build_flags = 
	-D CONFIG_BT_NIMBLE_PINNED_TO_CORE=0
	-D CONFIG_NIMBLE_STACK_USE_MEM_POOLS=1
	-D CONFIG_BT_NIMBLE_ROLE_CENTRAL_DISABLED
	-D CONFIG_BT_NIMBLE_ROLE_OBSERVER_DISABLED
	-D CORE_DEBUG_LEVEL=0

[ESP32]
build_flags = 
	${common_env_data.build_flags}
	-D PIN_NEOPIXEL=4
	-D MOSFET_PIN_1=22
	-D MOSFET_PIN_2=23
	-D PIN_FORWARD=18
	-D PIN_BACKWARD=19
	-D PIN_BRAKE=21
	-D BUZPIN=25
	-D BATTERY_PIN=34
	-D LIGHT_BAR_PIN=2
	-D VESC_RX_PIN=16
	-D VESC_TX_PIN=17
	-D DISPLAY_RX_PIN=9
	-D DISPLAY_TX_PIN=10
	-D SPEED_SENSOR_PIN=5
	-D CAN_TX_PIN=_26
	-D CAN_RX_PIN=_27

[FEATHER-ESP32]
build_flags = 
	${common_env_data.build_flags}
	-D PIN_NEOPIXEL=4
	-D BUZPIN=14
	-D BATTERY_PIN=34
	-D LIGHT_BAR_PIN=13
	-D VESC_RX_PIN=7
	-D VESC_TX_PIN=8
	-D DISPLAY_RX_PIN=9
	-D DISPLAY_TX_PIN=10
	-D CAN_TX_PIN=_26
	-D CAN_RX_PIN=_27

[ESP32-S3]
build_flags = 
	${common_env_data.build_flags}
	-D PIN_NEOPIXEL=3
	-D PIN_FORWARD=11
	-D PIN_BACKWARD=12
	-D PIN_BRAKE=13
	-D BUZPIN=38
	-D BATTERY_PIN=33
	-D LIGHT_BAR_PIN=2
	-D VESC_RX_PIN=44
	-D VESC_TX_PIN=43
	-D DISPLAY_RX_PIN=9
	-D DISPLAY_TX_PIN=10
	-D CAN_TX_PIN=16
	-D CAN_RX_PIN=17
	-D ESP32S3

[AVASPARK-RGB]
build_flags = 
	${common_env_data.build_flags}
	-D PIN_NEOPIXEL_FRONT=18
	-D PIN_NEOPIXEL_BACK=17
	-D BUZPIN=4
	-D BATTERY_PIN=34
	-D LIGHT_BAR_PIN=19
	-D CAN_TX_PIN=_33
	-D CAN_RX_PIN=_32
	-D PIN_BOARD_LED=16
	-D BMS_TX_PIN=23
	-D BMS_ON_PIN=25

[env:native]
platform = native
lib_deps = solidgeek/VescUart@^1.0.1

[env:esp32doit_devkit_v1]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = default.csv
lib_deps = 
	${common_env_data.lib_deps_external}
	solidgeek/VescUart@^1.0.1
build_flags = ${ESP32.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY
monitor_filters = 
	time
	esp32_exception_decoder
extra_scripts = pre:change_firmware_name.py
custom_firmware_name = firmware_esp32doit-devkit-v1

[env:esp32doit_devkit_v1_uart]
extends = env:esp32doit_devkit_v1
build_flags = ${ESP32.build_flags} -D LED_WS28xx
custom_firmware_name = firmware_esp32doit-devkit-v1_uart
lib_deps = solidgeek/VescUart@^1.0.1

[env:wemos_d1_mini32]
platform = espressif32
board = wemos_d1_mini32
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = default.csv
lib_deps = 
	${common_env_data.lib_deps_external}
	/workspaces/rESCue/lib/vesc-protocol
build_flags = ${ESP32.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY -Ilib/vesc-protocol/src
monitor_filters = 
	time
	esp32_exception_decoder
extra_scripts = pre:change_firmware_name.py
custom_firmware_name = firmware_wemos_d1_mini32

[env:wemos_d1_mini32_cob]
extends = env:wemos_d1_mini32
build_flags = ${ESP32.build_flags} -D LED_COB -D CANBUS_ENABLED -D CANBUS_ONLY
custom_firmware_name = firmware_wemos_d1_mini32_cob
lib_deps = solidgeek/VescUart@^1.0.1

[env:wemos_d1_mini32_uart]
extends = env:wemos_d1_mini32
build_flags = ${ESP32.build_flags} -D LED_WS28xx
custom_firmware_name = firmware_wemos_d1_mini32_uart
lib_deps = solidgeek/VescUart@^1.0.1

[env:wemos_d1_mini32_cob_uart]
extends = env:wemos_d1_mini32
build_flags = ${ESP32.build_flags} -D LED_COB
custom_firmware_name = firmware_wemos_d1_mini32_cob_uart
lib_deps = solidgeek/VescUart@^1.0.1

[env:nodemcu-32s]
platform = espressif32
board = nodemcu-32s
framework = arduino
monitor_speed = 115200
board_build.partitions = default.csv
lib_deps = 
	${common_env_data.lib_deps_external}
	solidgeek/VescUart@^1.0.1
build_flags = 
	${ESP32.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY
extra_scripts = pre:change_firmware_name.py
custom_firmware_name = firmware_nodemcu-32s

[env:avaspark-rgb]
platform = espressif32
board = nodemcu-32s
framework = arduino
monitor_speed = 115200
board_build.partitions = default.csv
lib_deps = 
	${common_env_data.lib_deps_external}
	solidgeek/VescUart@^1.0.1
build_flags = 
	${AVASPARK-RGB.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY
extra_scripts = pre:change_firmware_name.py
custom_firmware_name = firmware_avaspark-rgb

[env:lolin_wemos_s3_mini]
platform = espressif32
board = lolin_s3_mini
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = default.csv
lib_deps = 
	${common_env_data.lib_deps_external}
	solidgeek/VescUart@^1.0.1
build_flags = ${ESP32-S3.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY
monitor_filters = 
	time
	esp32_exception_decoder
extra_scripts = pre:change_firmware_name.py
custom_firmware_name = firmware_lolin_wemos_s3_mini

[env:lolin_wemos_s3_mini_cob]
extends = env:lolin_wemos_s3_mini
build_flags = ${ESP32-S3.build_flags} -D LED_COB -D CANBUS_ENABLED -D CANBUS_ONLY
custom_firmware_name = firmware_lolin_wemos_s3_mini_cob
lib_deps = solidgeek/VescUart@^1.0.1

[env:lolin_wemos_s3_mini_uart]
extends = env:lolin_wemos_s3_mini
build_flags = ${ESP32-S3.build_flags} -D LED_WS28xx
custom_firmware_name = firmware_lolin_wemos_s3_mini_uart
lib_deps = solidgeek/VescUart@^1.0.1

[env:lolin_wemos_s3_mini_cob_uart]
extends = env:lolin_wemos_s3_mini
build_flags = ${ESP32-S3.build_flags} -D LED_COB
custom_firmware_name = firmware_lolin_wemos_s3_mini_cob_uart
lib_deps = solidgeek/VescUart@^1.0.1

[env:feather_esp32]
platform = espressif32
board = featheresp32
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = default.csv
lib_deps = 
	${common_env_data.lib_deps_external}
	solidgeek/VescUart@^1.0.1
build_flags = 
	${FEATHER-ESP32.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY
custom_firmware_name = firmware_feather_esp32

[env:m5stack-stamps3]
platform = espressif32
board = m5stack-stamps3
framework = arduino
build_flags = ${ESP32-S3.build_flags} -D LED_WS28xx -D CANBUS_ENABLED -D CANBUS_ONLY
monitor_filters = 
	time
	esp32_exception_decoder
extra_scripts = pre:change_firmware_name.py
custom_firmware_name = firmware_m5stack_stamps3
lib_deps = solidgeek/VescUart@^1.0.1
